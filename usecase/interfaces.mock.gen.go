// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/interfaces.go

// Package mock_usecase is a generated GoMock package.
package usecase

import (
	context "context"
	reflect "reflect"

	entity "github.com/SawitProRecruitment/UserService/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockUseCaseInterface is a mock of UseCaseInterface interface.
type MockUseCaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUseCaseInterfaceMockRecorder
}

// MockUseCaseInterfaceMockRecorder is the mock recorder for MockUseCaseInterface.
type MockUseCaseInterfaceMockRecorder struct {
	mock *MockUseCaseInterface
}

// NewMockUseCaseInterface creates a new mock instance.
func NewMockUseCaseInterface(ctrl *gomock.Controller) *MockUseCaseInterface {
	mock := &MockUseCaseInterface{ctrl: ctrl}
	mock.recorder = &MockUseCaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUseCaseInterface) EXPECT() *MockUseCaseInterfaceMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockUseCaseInterface) CreateUser(ctx context.Context, request entity.CreateUserRequest) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", ctx, request)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockUseCaseInterfaceMockRecorder) CreateUser(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockUseCaseInterface)(nil).CreateUser), ctx, request)
}

// GetUser mocks base method.
func (m *MockUseCaseInterface) GetUser(ctx context.Context, request entity.GetUserByIdRequest) (entity.UserResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", ctx, request)
	ret0, _ := ret[0].(entity.UserResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockUseCaseInterfaceMockRecorder) GetUser(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockUseCaseInterface)(nil).GetUser), ctx, request)
}

// Login mocks base method.
func (m *MockUseCaseInterface) Login(ctx context.Context, request entity.GetUserByPhoneNumberRequest, password string) (entity.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", ctx, request, password)
	ret0, _ := ret[0].(entity.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login.
func (mr *MockUseCaseInterfaceMockRecorder) Login(ctx, request, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockUseCaseInterface)(nil).Login), ctx, request, password)
}

// UpdateUser mocks base method.
func (m *MockUseCaseInterface) UpdateUser(ctx context.Context, request entity.UpdateUserRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateUser", ctx, request)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateUser indicates an expected call of UpdateUser.
func (mr *MockUseCaseInterfaceMockRecorder) UpdateUser(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUser", reflect.TypeOf((*MockUseCaseInterface)(nil).UpdateUser), ctx, request)
}
